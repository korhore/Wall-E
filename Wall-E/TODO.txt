Main architecture
- all capability implementation like Seeing, Hearting, Moving, Networking, etc
  are subclasses of Robot
- Robot handles Sensastions and its subrobots using settings from a config file,
  or/and fron subRobot itself, which tells its capabilitis
- Robot has one outAxon (except Inteelligence capability) which handles
  all Sensation for "out" direction
- Robot has many inAxons for subRobots that are in samre time these Robots
  inAxons.
- Finallyu the are leafRobots that dont have any more subRobots. Thesae are
  sinal implementation of one (basically or more) capability
  
- arrange code by copabilities as modules without denpendencies: moving,
  hearing, seeing, sensing, etc. This can solve import problem,
  but it would be easier to develop capabilities anyway.
  
  - OK CONFIG_FILE_PATH from config.py
  - OK toBytes - method to code sensation
    as bytes ans ecode method to oppisite way
    
 - Make Capabilities-class. Can be iplemented in Config. In confif should be
   anyway hosts, property, where we Aass hosts that have contacted us and
   hosts that we add manually. Start with this.
   
- Implement Identity and Virtual instance. That way we can test Walle to meet Eva
  in same process with threads, so developing will be much faster than using
  many physical servers, but functionality will be exactly same.
  Need some changes to Confif, Axen etc. Rename main class as Robot(Server)
  
  Weneed also functional status od robot, StudyOwnIdentity, Sleeping, Normal, etc
  
- Axon should have sunAxons with capanility and direction to handle sensation routing.

- Seems, that Calibrating logic with direction will become broken, when direction is set
  to Sensation. Fix this later, because we donnt yet have hardware suitable for
  direction hearing. This has been experimental any way
  
  - Move moving to its own submodule and fix Sensation in Romeo.
    This module should process all moving and observation Sensations